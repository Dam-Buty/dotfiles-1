#!/bin/bash

set -euo pipefail

VAULT_INTEGRATION_PATH=$HOME/.vault/vault-integration
NO_PULL=${NO_PULL:-0}

function plop () {
  notify-send -u critical -i ~/dotfiles/assets/rick.png Hey\! "$1"
}

if ! systemctl is-active docker --quiet ; then
  echo "Docker is not started. Starting..."
  sudo systemctl start docker
fi

function pullIfNeeded() {
  if [[ "$NO_PULL" != "1" ]]; then
    docker-compose pull
  fi
}

cd "$VAULT_INTEGRATION_PATH"

export TEST_ENV=$(
(node <<EOF
const gv = l => l ? \`Vault \${new RegExp("vault-([0-9]\\.[0-9])").exec(l)[1]}\` : null;
console.log(\`$(rg '^vault-' stack.yaml | tr -d :)\`.split('\\n').reduce((acc, cur, i, arr) => (gv(cur) !== gv(arr[i + 1])) ? [...acc, \`\${gv(cur)} (\${cur})\`] : acc, []).join('\\n'));
EOF
) | fzf --height 10 --reverse --tac | sed -E 's/.*\((.*)\)/\1/g'
)

if [[ "$TEST_ENV" == "" ]]; then
  echo "No chosen version, exiting"
  exit 1
fi

STACK=$(pipenv run ./stack2env)
echo $STACK
export $STACK

(
  (
    stop-vault && \
    pullIfNeeded && \
    hsmaas init --compartment-id "$VAULT_COMPARTMENT_ID" --clean && \
    docker-compose up -d
  ) && \
  plop "Vault has been reset"
) || plop "Failed to reset"
